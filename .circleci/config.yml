version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.0.0
commands:
  install-dependencies:
    steps:
      # - restore_cache:
      #     keys:
      #       - dependency-cache-v2-{{ checksum "package-lock.json" }}
      #       - dependency-cache-v2-
      - run:
          name: install-deps
          command: "npm install"
      # - save_cache:
      #     key: dependency-cache-v2-{{ checksum "package-lock.json" }}
      #     paths:
      #       - ./node_modules
jobs:
  build_and_test:
    resource_class: large
    docker:
      - image: cimg/node:22.14
        environment:
          RS_TEST_DB_USERNAME: chefbook
          RS_TEST_DB_PASSWORD: admin
          RS_TEST_DB_DATABASE: chefbook_test
          NODE_ENV: test
          SENTRY_SAMPLE_RATE: 0
          POSTGRES_DB: chefbook_test
          POSTGRES_USER: chefbook
          POSTGRES_PASSWORD: admin
          POSTGRES_PORT: 5432
          POSTGRES_HOST: localhost
          POSTGRES_SSL: false
          POSTGRES_LOGGING: false
          DATABASE_URL: postgresql://chefbook:admin@localhost:5432/chefbook_test?connection_limit=5
          SEARCH_PROVIDER: none
          STORAGE_TYPE: filesystem
          FILESYSTEM_STORAGE_PATH: ~/project/rsdata
          GRIP_URL: http://localhost:5561/
          GRIP_KEY: changeme
      - image: postgres:16.1
        environment:
          POSTGRES_USER: chefbook
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: chefbook_test
    steps:
      - checkout
      - install-dependencies
      - run:
          name: prettier
          command: npx prettier --check .
      - run:
          name: migrate
          command: npx prisma migrate dev
      - run:
          name: start api
          command: npx ts-node --swc --project packages/backend/tsconfig.json packages/backend/src/bin/www
          background: true
      - run:
          name: wait for api
          command: dockerize -wait tcp://localhost:3000 -timeout 30s
      - run:
          name: lint, typecheck, test, build
          command: npx nx run-many --targets=lint,typecheck,test,build --output-style=static --verbose
          environment:
            APP_VERSION: ci
            ENVIRONMENT: production
  push_backend:
    resource_class: large
    docker:
      - image: cimg/node:22.14
    steps:
      - checkout
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: docker-login
          command: echo "$DOCKER_PAT" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: api-hosted.sh
          command: ./scripts/build/api-hosted.sh ${CIRCLE_TAG:=stg}
  push_backend_selfhost:
    resource_class: large
    docker:
      - image: cimg/node:22.14
    steps:
      - checkout
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: docker-login
          command: echo "$DOCKER_PAT" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: setup buildx
          command: ./scripts/circleci_buildx.sh
      - run:
          name: api-selfhost.sh
          command: ./scripts/build/api-selfhost.sh ${CIRCLE_TAG:=stg}
  push_frontend:
    resource_class: large
    docker:
      - image: cimg/node:22.14
    steps:
      - checkout
      - aws-cli/setup
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - install-dependencies
      - run:
          name: build-frontend
          command: (export APP_VERSION=${CIRCLE_TAG:=stg} && npx nx build frontend)
          environment:
            ENVIRONMENT: production
      - run:
          name: move-frontend-build
          command: mv packages/frontend/www ./www
      - run:
          name: set-frontend-version
          command: sed -i "s/window.version = \"development\";/window.version = \"${CIRCLE_TAG:=stg}\";/" www/index.html
      - run:
          name: webapp-hosted.sh
          command: ./scripts/build/webapp-hosted.sh ${CIRCLE_TAG:=stg}
  push_frontend_selfhost:
    resource_class: large
    docker:
      - image: cimg/node:22.14
    steps:
      - checkout
      - aws-cli/setup
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: docker-login
          command: echo "$DOCKER_PAT" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: setup buildx
          command: ./scripts/circleci_buildx.sh
      - install-dependencies
      - run:
          name: build-frontend
          command: (export APP_VERSION=${CIRCLE_TAG:=stg} && npx nx build:selfhost frontend)
          environment:
            ENVIRONMENT: production
      - run:
          name: move-frontend-build
          command: mv packages/frontend/www ./www
      - run:
          name: set-frontend-version
          command: sed -i "s/window.version = \"development\";/window.version = \"${CIRCLE_TAG:=stg}\";/" www/index.html
      - run:
          name: webapp-selfhost.sh
          command: ./scripts/build/webapp-selfhost.sh ${CIRCLE_TAG:=stg}

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - push_backend:
          requires:
            - build_and_test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*.*/
            branches:
              ignore: /.*/
      - push_backend_selfhost:
          requires:
            - build_and_test
          filters:
            tags:
              # We do not publish -beta versions for selfhost
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - push_frontend:
          requires:
            - build_and_test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*.*/
            branches:
              ignore: /.*/
      - push_frontend_selfhost:
          requires:
            - build_and_test
          filters:
            tags:
              # We do not publish -beta versions for selfhost
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
